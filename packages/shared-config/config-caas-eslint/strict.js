module.exports = {
  root: true,
  env: {
    browser: true,
    jest: true,
    node: true,
  },
  parser: '@typescript-eslint/parser',
  parserOptions: {
    project: ['./tsconfig.eslint.json'],
  },
  extends: [
    'airbnb',
    'eslint:recommended',
    'plugin:@typescript-eslint/recommended',
    'plugin:@typescript-eslint/recommended-requiring-type-checking',
    'plugin:react-hooks/recommended',
    'plugin:react/recommended',
    'plugin:security/recommended',
    'plugin:sonarjs/recommended',
    'plugin:unicorn/recommended',
    'plugin:workspaces/recommended',
    'plugin:jest/recommended',
    'prettier',
  ],
  plugins: [
    '@typescript-eslint',
    'html',
    'import',
    'react',
    'react-hooks',
    'security',
    'sonarjs',
    'unicorn',
    'workspaces',
  ],
  globals: {
    Atomics: 'readonly',
    React: 'writable',
    SharedArrayBuffer: 'readonly',
  },
  rules: {
    'unicorn/prefer-top-level-await': 0,
    '@typescript-eslint/await-thenable': 0,
    '@typescript-eslint/no-floating-promises': 'error',
    '@typescript-eslint/no-shadow': 'error',
    '@typescript-eslint/no-unsafe-argument': 'warn',
    '@typescript-eslint/no-unsafe-assignment': 'warn',
    '@typescript-eslint/no-unsafe-call': 'warn',
    '@typescript-eslint/no-unsafe-member-access': 0,
    '@typescript-eslint/no-use-before-define': ['error'],
    '@typescript-eslint/no-var-requires': 0,
    '@typescript-eslint/require-await': 'warn',
    '@typescript-eslint/restrict-template-expressions': 0,
    'class-methods-use-this': 0,
    'comma-dangle': ['error', 'only-multiline'],
    'import/no-extraneous-dependencies': [
      'error',
      {
        // allow unit tests to import devDependencies
        devDependencies: ['**/__test__/**', '**/webpack.config.js'],
      },
    ],
    'import/extensions': [
      'error',
      'ignorePackages',
      {
        js: 'never',
        jsx: 'never',
        ts: 'never',
        tsx: 'never',
        json: 'always',
      },
    ],
    'import/prefer-default-export': 0,
    'jsx-a11y/anchor-is-valid': [0],
    'jsx-a11y/href-no-hash': [0],
    'linebreak-style': ['error', 'unix'],
    'no-await-in-loop': 0,
    'no-case-declarations': 0,
    'no-nested-ternary': 0,
    'no-restricted-syntax': 0,
    'no-return-await': 0,
    'no-shadow': 0,
    'no-underscore-dangle': 0,
    'no-use-before-define': 0,
    radix: 0,
    'react-hooks/exhaustive-deps': 0,
    'react-hooks/rules-of-hooks': 'error',
    'react/function-component-definition': 0,
    'react/jsx-filename-extension': 0,
    'react/jsx-no-useless-fragment': ['error', { allowExpressions: true }],
    'react/jsx-props-no-spreading': 0,
    'react/react-in-jsx-scope': 0,
    'security/detect-non-literal-fs-filename': 0,
    'security/detect-object-injection': 0,
    'sonarjs/no-duplicate-string': 0,
    'unicorn/better-regex': 'warn',
    'unicorn/catch-error-name': 0,
    'unicorn/consistent-destructuring': 'warn',
    'unicorn/consistent-function-scoping': 0,
    'unicorn/error-message': 'warn',
    'unicorn/explicit-length-check': 0,
    'unicorn/filename-case': 0,
    'unicorn/import-style': 0,
    'unicorn/new-for-builtins': 0,
    'unicorn/no-array-callback-reference': 'warn',
    'unicorn/no-array-for-each': 0,
    'unicorn/no-array-method-this-argument': 'warn',
    'unicorn/no-array-push-push': 'warn',
    'unicorn/no-array-reduce': 0,
    'unicorn/no-await-expression-member': 0,
    'unicorn/no-console-spaces': 'warn',
    'unicorn/no-instanceof-array': 'warn',
    'unicorn/no-null': 0,
    'unicorn/no-process-exit': 'warn',
    'unicorn/no-useless-promise-resolve-reject': 'warn',
    'unicorn/no-useless-undefined': 'warn',
    'unicorn/no-zero-fractions': 0,
    'unicorn/numeric-separators-style': 0,
    'unicorn/prefer-date-now': 'warn',
    'unicorn/prefer-dom-node-text-content': 0,
    'unicorn/prefer-includes': 'warn',
    'unicorn/prefer-json-parse-buffer': 'warn',
    'unicorn/prefer-module': 0,
    'unicorn/prefer-node-protocol': 0,
    'unicorn/prefer-number-properties': 'warn',
    'unicorn/prefer-object-from-entries': 'warn',
    'unicorn/prefer-query-selector': 0,
    'unicorn/prefer-set-has': 0,
    'unicorn/prefer-spread': 'warn',
    'unicorn/prefer-string-slice': 0,
    'unicorn/prefer-switch': 'warn',
    'unicorn/prefer-ternary': 0,
    'unicorn/prevent-abbreviations': 0,
    'unicorn/text-encoding-identifier-case': 'warn',
    'unicorn/throw-new-error': 'warn',
    'no-useless-constructor': 'off',
    '@typescript-eslint/no-useless-constructor': 'error',
    'jest/no-alias-methods': 0,
  },
  settings: {
    'import/resolver': {
      typescript: {
        alwaysTryTypes: true, // always try to resolve types under `<root>@types` directory even it doesn't contain any source code, like `@types/unist`
      },
    },
  },
  overrides: [
    {
      files: ['*.js'],
      rules: {
        '@typescript-eslint/no-floating-promises': 0,
        '@typescript-eslint/no-unsafe-argument': 0,
        '@typescript-eslint/no-unsafe-assignment': 0,
        '@typescript-eslint/no-unsafe-call': 0,
        '@typescript-eslint/no-unsafe-return': 0,
        '@typescript-eslint/explicit-module-boundary-types': 0,
        '@typescript-eslint/restrict-plus-operands': 0,
      },
    },
    {
      files: ['*.test.ts', '*.test.tsx', '*.test.js'],
      plugins: ['jest'],
      rules: {
        '@typescript-eslint/require-await': 0,
        '@typescript-eslint/no-unsafe-return': 0,
        'unicorn/no-useless-promise-resolve-reject': 0,
        'unicorn/no-useless-undefined': 0,
        '@typescript-eslint/unbound-method': 'off',
        'jest/unbound-method': 'error',
      },
    },
    {
      files: ['*.tsx'],
      rules: {
        'react/require-default-props': 0,
      },
    },
  ],
  ignorePatterns: [
    '.next',
    'next-env.d.ts',
    'target',
    'jest.config.js',
    'chd_api_types.ts',
    '**/data_layer/**/*.ts',
  ],
};
